{"remainingRequest":"/Users/yanmaohua/Desktop/toutiao/toutiao/node_modules/thread-loader/dist/cjs.js!/Users/yanmaohua/Desktop/toutiao/toutiao/node_modules/babel-loader/lib/index.js!/Users/yanmaohua/Desktop/toutiao/toutiao/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yanmaohua/Desktop/toutiao/toutiao/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yanmaohua/Desktop/toutiao/toutiao/src/views/article/components/CommentList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanmaohua/Desktop/toutiao/toutiao/src/views/article/components/CommentList.vue","mtime":1632471644229},{"path":"/Users/yanmaohua/Desktop/toutiao/toutiao/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanmaohua/Desktop/toutiao/toutiao/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanmaohua/Desktop/toutiao/toutiao/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yanmaohua/Desktop/toutiao/toutiao/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanmaohua/Desktop/toutiao/toutiao/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMveWFubWFvaHVhL0Rlc2t0b3AvdG91dGlhby90b3V0aWFvL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMveWFubWFvaHVhL0Rlc2t0b3AvdG91dGlhby90b3V0aWFvL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgQ29tbWVudEl0ZW0gZnJvbSAnQC92aWV3cy9hcnRpY2xlL2NvbXBvbmVudHMvQ29tbWVudEl0ZW0nOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBmaW5pc2hlZDogZmFsc2UsCiAgICAgIG9mZnNldDogbnVsbCwKICAgICAgbGltaXQ6IDEwLAogICAgICB0b3RhbDogMAogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIENvbW1lbnRJdGVtOiBDb21tZW50SXRlbQogIH0sCiAgcHJvcHM6IHsKICAgIGFydGljbGVJZDogewogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgdHlwZTogW09iamVjdCwgTnVtYmVyLCBTdHJpbmddCiAgICB9LAogICAgY29tbWVudExpc3Q6IHsKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgIC8vIOm7mOiupOWAvAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIG9uTG9hZDogZnVuY3Rpb24gb25Mb2FkKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgX3RoaXMkY29tbWVudExpc3QsIF95aWVsZCRfdGhpcyQkYXhpb3MkZywgcmVzOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRheGlvcy5nZXQoJ3YxXzAvY29tbWVudHMnLCB7CiAgICAgICAgICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICAgICAgICAgIHR5cGU6ICdhJywKICAgICAgICAgICAgICAgICAgICBzb3VyY2U6IF90aGlzLmFydGljbGVJZCwKICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6IF90aGlzLm9mZnNldCwKICAgICAgICAgICAgICAgICAgICBsaW1pdDogX3RoaXMubGltaXQKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIF95aWVsZCRfdGhpcyQkYXhpb3MkZyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICByZXMgPSBfeWllbGQkX3RoaXMkJGF4aW9zJGcuZGF0YTsKCiAgICAgICAgICAgICAgICBpZiAocmVzLmRhdGEucmVzdWx0cy5sZW5ndGgpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMub2Zmc2V0ID0gcmVzLmRhdGEubGFzdF9pZDsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIF90aGlzLm9mZnNldCA9IG51bGw7CiAgICAgICAgICAgICAgICAgIF90aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgX3RoaXMuZmluaXNoZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIChfdGhpcyRjb21tZW50TGlzdCA9IF90aGlzLmNvbW1lbnRMaXN0KS5wdXNoLmFwcGx5KF90aGlzJGNvbW1lbnRMaXN0LCBfdG9Db25zdW1hYmxlQXJyYXkocmVzLmRhdGEucmVzdWx0cykpOwoKICAgICAgICAgICAgICAgIF90aGlzLnRvdGFsID0gcmVzLmRhdGEudG90YWxfY291bnQ7CgogICAgICAgICAgICAgICAgX3RoaXMuJGVtaXQoJ2NvbW1lbnROdW0nLCBfdGhpcy50b3RhbCk7CgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTE7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1swLCAxMV1dKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5vbkxvYWQoKTsKICB9Cn07"},{"version":3,"sources":["CommentList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAgBA,OAAA,WAAA,MAAA,wCAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,MAAA,EAAA,IAHA;AAIA,MAAA,KAAA,EAAA,EAJA;AAKA,MAAA,KAAA,EAAA;AALA,KAAA;AAOA,GATA;AAUA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA,GAVA;AAaA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA;AAFA,KADA;AAKA,IAAA,WAAA,EAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA;AACA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAHA;AALA,GAbA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,CAAA,MAAA,CAAA,GAAA,CAAA,eAAA,EAAA;AACA,kBAAA,MAAA,EAAA;AACA,oBAAA,IAAA,EAAA,GADA;AAEA,oBAAA,MAAA,EAAA,KAAA,CAAA,SAFA;AAGA,oBAAA,MAAA,EAAA,KAAA,CAAA,MAHA;AAIA,oBAAA,KAAA,EAAA,KAAA,CAAA;AAJA;AADA,iBAAA,CAFA;;AAAA;AAAA;AAEA,gBAAA,GAFA,yBAEA,IAFA;;AAUA,oBAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,MAAA,EAAA;AACA,kBAAA,KAAA,CAAA,MAAA,GAAA,GAAA,CAAA,IAAA,CAAA,OAAA;AACA,iBAFA,MAEA;AACA,kBAAA,KAAA,CAAA,MAAA,GAAA,IAAA;AACA,kBAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,kBAAA,KAAA,CAAA,QAAA,GAAA,IAAA;AACA;;AACA,qCAAA,KAAA,CAAA,WAAA,EAAA,IAAA,6CAAA,GAAA,CAAA,IAAA,CAAA,OAAA;;AACA,gBAAA,KAAA,CAAA,KAAA,GAAA,GAAA,CAAA,IAAA,CAAA,WAAA;;AACA,gBAAA,KAAA,CAAA,KAAA,CAAA,YAAA,EAAA,KAAA,CAAA,KAAA;;AAnBA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AAtBA,GAxBA;AAgDA,EAAA,OAhDA,qBAgDA;AACA,SAAA,MAAA;AACA;AAlDA,CAAA","sourcesContent":["<template>\n  <van-list\n    v-model=\"loading\"\n    :finished=\"finished\"\n    finished-text=\"没有更多了\"\n    @load=\"onLoad\"\n  >\n    <comment-item\n      v-for=\"(v, i) in commentList\"\n      :key=\"i\"\n      :comment=\"v\"\n    ></comment-item>\n  </van-list>\n</template>\n\n<script>\nimport CommentItem from '@/views/article/components/CommentItem'\nexport default {\n  data() {\n    return {\n      loading: false,\n      finished: false,\n      offset: null,\n      limit: 10,\n      total: 0\n    }\n  },\n  components: {\n    CommentItem\n  },\n  props: {\n    articleId: {\n      required: true,\n      type: [Object, Number, String]\n    },\n    commentList: {\n      required: true,\n      // 默认值\n      default: () => []\n    }\n  },\n  methods: {\n    async onLoad() {\n      try {\n        const { data: res } = await this.$axios.get('v1_0/comments', {\n          params: {\n            type: 'a',\n            source: this.articleId,\n            offset: this.offset,\n            limit: this.limit\n          }\n        })\n        if (res.data.results.length) {\n          this.offset = res.data.last_id\n        } else {\n          this.offset = null\n          this.loading = false\n          this.finished = true\n        }\n        this.commentList.push(...res.data.results)\n        this.total = res.data.total_count\n        this.$emit('commentNum', this.total)\n      } catch (err) {}\n    }\n  },\n  created() {\n    this.onLoad()\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n</style>\n"],"sourceRoot":"src/views/article/components"}]}