{"remainingRequest":"/Users/yanmaohua/Desktop/toutiao/toutiao/node_modules/babel-loader/lib/index.js!/Users/yanmaohua/Desktop/toutiao/toutiao/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yanmaohua/Desktop/toutiao/toutiao/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yanmaohua/Desktop/toutiao/toutiao/src/views/login/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanmaohua/Desktop/toutiao/toutiao/src/views/login/index.vue","mtime":1631927031986},{"path":"/Users/yanmaohua/Desktop/toutiao/toutiao/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanmaohua/Desktop/toutiao/toutiao/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yanmaohua/Desktop/toutiao/toutiao/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanmaohua/Desktop/toutiao/toutiao/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL3lhbm1hb2h1YS9EZXNrdG9wL3RvdXRpYW8vdG91dGlhby9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMveWFubWFvaHVhL0Rlc2t0b3AvdG91dGlhby90b3V0aWFvL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLyBpbXBvcnQgeyBsb2dpbiB9IGZyb20gJ0AvYXBpJwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVzZXI6IHsKICAgICAgICBtb2JpbGU6ICcxMzkxMTExMTExMicsCiAgICAgICAgY29kZTogJzI0NjgxMCcKICAgICAgfSwKICAgICAgdXNlckZvcm06IHsKICAgICAgICBtb2JpbGU6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICfor7fovpPlhaXmiYvmnLrlj7cnLAogICAgICAgICAgdHJpZ2dlcjogJ29uQmx1cicKICAgICAgICB9XSwKICAgICAgICBjb2RlOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWl6aqM6K+B56CBJywKICAgICAgICAgIHRyaWdnZXI6ICdvbkJsdXInCiAgICAgICAgfV0KICAgICAgfSwKICAgICAgY291bnQ6IGZhbHNlLAogICAgICB0aW1lOiAxMDAwICogNQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOmqjOivgeeggeeahGZpbmlzaOS6i+S7tgogICAgY2xvc2VDOiBmdW5jdGlvbiBjbG9zZUMoKSB7CiAgICAgIHRoaXMuY291bnQgPSBmYWxzZTsKICAgIH0sCiAgICBvbkNsaWNrTGVmdDogZnVuY3Rpb24gb25DbGlja0xlZnQoKSB7CiAgICAgIC8vIOWTqumHjOadpeWTqumHjOWOuwogICAgICAvLyB0aGlz5Luj6KGo5b2T5YmN57uE5Lu2CiAgICAgIHRoaXMuJHJvdXRlci5iYWNrKCk7CiAgICB9LAogICAgLy8g6I635Y+W6aqM6K+B56CBCiAgICBnZXRDb2RlOiBmdW5jdGlvbiBnZXRDb2RlKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRyZWZzLmxvZ2luRm9ybS52YWxpZGF0ZSgnbW9iaWxlJyk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA4OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA1OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIF90aGlzLiR0b2FzdC5mYWlsKCfor7floavlhpnmiYvmnLrlj7cnKSk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIF90aGlzLmNvdW50ID0gdHJ1ZTsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA5OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRheGlvcy5nZXQoInYxXzAvc21zL2NvZGVzLyIuY29uY2F0KF90aGlzLnVzZXIubW9iaWxlKSk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTk7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxNDsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQxID0gX2NvbnRleHRbImNhdGNoIl0oOSk7CiAgICAgICAgICAgICAgICAvLyDlhbPpl63pqozor4HlgJLorqHml7YKICAgICAgICAgICAgICAgIF90aGlzLmNvdW50ID0gZmFsc2U7IC8vIOaPkOekuumikee5geWPkemAgQoKICAgICAgICAgICAgICAgIGlmICghKF9jb250ZXh0LnQxLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDI5KSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTk7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIF90aGlzLiR0b2FzdC5mYWlsKCfpopHnuYHlj5HpgIEnKSk7CgogICAgICAgICAgICAgIGNhc2UgMTk6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDVdLCBbOSwgMTRdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vIOihqOWNleaPkOS6pOWPkemAgeivt+axggogICAgb25TdWJtaXQ6IGZ1bmN0aW9uIG9uU3VibWl0KCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciB1c2VyLCBfeWllbGQkX3RoaXMyJCRheGlvcyQsIHJlczsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIC8vIOWKoOi9veaPkOekunVpCiAgICAgICAgICAgICAgICBfdGhpczIuJHRvYXN0LmxvYWRpbmcoewogICAgICAgICAgICAgICAgICBtZXNzYWdlOiAn5Yqg6L295LitLi4uJywKICAgICAgICAgICAgICAgICAgZm9yYmlkQ2xpY2s6IHRydWUKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIHVzZXIgPSBfdGhpczIudXNlcjsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIuJGF4aW9zLnBvc3QoJy92MV8wL2F1dGhvcml6YXRpb25zJywgX29iamVjdFNwcmVhZCh7fSwgdXNlcikpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBfeWllbGQkX3RoaXMyJCRheGlvcyQgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIHJlcyA9IF95aWVsZCRfdGhpczIkJGF4aW9zJC5kYXRhOwoKICAgICAgICAgICAgICAgIF90aGlzMi4kdG9hc3Quc3VjY2Vzcygn55m75YWl5oiQ5YqfJyk7CgogICAgICAgICAgICAgICAgX3RoaXMyLiRzdG9yZS5jb21taXQoJ3NldFVzZXInLCByZXMuZGF0YSk7CgogICAgICAgICAgICAgICAgX3RoaXMyLiRyb3V0ZXIucHVzaCgnLycpOwoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTU7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTI7CiAgICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMik7CgogICAgICAgICAgICAgICAgX3RoaXMyLiR0b2FzdC5mYWlsKCfnmbvlhaXlpLHotKUnKTsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1syLCAxMl1dKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,MAAA,EAAA,aADA;AAEA,QAAA,IAAA,EAAA;AAFA,OADA;AAKA,MAAA,QAAA,EAAA;AACA,QAAA,MAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,QAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,CADA;AAIA,QAAA,IAAA,EAAA,CAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,QAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA;AAJA,OALA;AAWA,MAAA,KAAA,EAAA,KAXA;AAYA,MAAA,IAAA,EAAA,OAAA;AAZA,KAAA;AAcA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,MAFA,oBAEA;AACA,WAAA,KAAA,GAAA,KAAA;AACA,KAJA;AAKA,IAAA,WALA,yBAKA;AACA;AACA;AACA,WAAA,OAAA,CAAA,IAAA;AACA,KATA;AAUA;AACA,IAAA,OAXA,qBAWA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,CAAA,KAAA,CAAA,SAAA,CAAA,QAAA,CAAA,QAAA,CAFA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,iDAIA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA,CAJA;;AAAA;AAMA,gBAAA,KAAA,CAAA,KAAA,GAAA,IAAA;AANA;AAAA;AAAA,uBAQA,KAAA,CAAA,MAAA,CAAA,GAAA,0BAAA,KAAA,CAAA,IAAA,CAAA,MAAA,EARA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUA;AACA,gBAAA,KAAA,CAAA,KAAA,GAAA,KAAA,CAXA,CAYA;;AAZA,sBAaA,YAAA,QAAA,CAAA,MAAA,KAAA,GAbA;AAAA;AAAA;AAAA;;AAAA,iDAcA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAdA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA,KA5BA;AA6BA;AACA,IAAA,QA9BA,sBA8BA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA;AACA,gBAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA;AACA,kBAAA,OAAA,EAAA,QADA;AAEA,kBAAA,WAAA,EAAA;AAFA,iBAAA;;AAIA,gBAAA,IANA,GAMA,MAAA,CAAA,IANA;AAAA;AAAA;AAAA,uBAQA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,sBAAA,oBACA,IADA,EARA;;AAAA;AAAA;AAQA,gBAAA,GARA,yBAQA,IARA;;AAWA,gBAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,MAAA;;AACA,gBAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,SAAA,EAAA,GAAA,CAAA,IAAA;;AACA,gBAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA;;AAbA;AAAA;;AAAA;AAAA;AAAA;;AAeA,gBAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,MAAA;;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AA/CA;AAjBA,CAAA","sourcesContent":["<template>\n  <div>\n    <!-- 左箭头点击事件 -->\n    <van-nav-bar left-arrow title=\"登入\" @click-left=\"onClickLeft\" />\n    <!-- 表单 -->\n    <van-form @submit=\"onSubmit\" ref=\"loginForm\">\n      <van-field\n        name=\"mobile\"\n        placeholder=\"手机号\"\n        v-model=\"user.mobile\"\n        maxlength=\"11\"\n        type=\"number\"\n        :rules=\"userForm.mobile\"\n      >\n        <i slot=\"left-icon\" class=\"iconfont icon-shouji\"></i>\n      </van-field>\n      <van-field\n        type=\"password\"\n        name=\"code\"\n        placeholder=\"验证码\"\n        v-model=\"user.code\"\n        :rules=\"userForm.code\"\n      >\n        <i slot=\"left-icon\" class=\"iconfont icon-yanzhengma\"></i>\n        <template #button>\n          <!-- 倒计时 -->\n          <van-count-down\n            v-if=\"count\"\n            :time=\"time\"\n            @finish=\"closeC\"\n            format=\"ss\"\n          />\n\n          <!-- 这里要设置native-type 否则会触发表单验证 -->\n          <van-button\n            v-else\n            class=\"msgBtn\"\n            size=\"small\"\n            @click=\"getCode\"\n            native-type=\"button\"\n            >获取验证码</van-button\n          >\n        </template>\n      </van-field>\n      <div style=\"margin: 16px\">\n        <van-button block type=\"info\" native-type=\"submit\">提交</van-button>\n      </div>\n    </van-form>\n  </div>\n</template>\n\n<script>\n// import { login } from '@/api'\nexport default {\n  data() {\n    return {\n      user: {\n        mobile: '13911111112',\n        code: '246810'\n      },\n      userForm: {\n        mobile: [\n          { required: true, message: '请输入手机号', trigger: 'onBlur' }\n        ],\n        code: [{ required: true, message: '请输入验证码', trigger: 'onBlur' }]\n      },\n      count: false,\n      time: 1000 * 5\n    }\n  },\n  methods: {\n    // 验证码的finish事件\n    closeC() {\n      this.count = false\n    },\n    onClickLeft() {\n      // 哪里来哪里去\n      // this代表当前组件\n      this.$router.back()\n    },\n    // 获取验证码\n    async getCode() {\n      try {\n        await this.$refs.loginForm.validate('mobile')\n      } catch (err) {\n        return this.$toast.fail('请填写手机号')\n      }\n      this.count = true\n      try {\n        await this.$axios.get(`v1_0/sms/codes/${this.user.mobile}`)\n      } catch (err) {\n        // 关闭验证倒计时\n        this.count = false\n        // 提示频繁发送\n        if (err.response.status === 429) {\n          return this.$toast.fail('频繁发送')\n        }\n      }\n    },\n    // 表单提交发送请求\n    async onSubmit() {\n      // 加载提示ui\n      this.$toast.loading({\n        message: '加载中...',\n        forbidClick: true\n      })\n      const user = this.user\n      try {\n        const { data: res } = await this.$axios.post('/v1_0/authorizations', {\n          ...user\n        })\n        this.$toast.success('登入成功')\n        this.$store.commit('setUser', res.data)\n        this.$router.push('/')\n      } catch (err) {\n        this.$toast.fail('登入失败')\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.iconfont {\n  font-size: 37px;\n}\n.msgBtn {\n  width: 156px;\n  height: 46px;\n  line-height: 46px;\n  color: #666;\n}\n</style>\n"],"sourceRoot":"src/views/login"}]}